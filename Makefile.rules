#
# Top-level Makefile, minus the configuration variables
#

default: all ; @# empty rule

force:

MAKEFLAGS += --no-print-directory

# Echo an arbitrary make/environment variable
echovar: force; @echo $(VARNAME)=\"$($(VARNAME))\"

# To prevent application of pass-through rule upon 'include':
Makefile $(upcxx_src)/Makefile.rules: ; @# empty rule

# TODO: default conduit selection should be at configure time
install-hook: force
	@eval $$($(MAKE) -C bld/gasnet.opt echovar VARNAME=CONDUITS) && \
	 if [[ -n "$$GASNET_CONDUIT" ]]; then                \
	   conduit_default="$$GASNET_CONDUIT";               \
	 elif expr "x$(CROSS)" : xcray-aries- >/dev/null; then \
	   conduit_default='aries';                          \
	 else                                                \
	   conduit_default='smp';                            \
	 fi &&                                               \
	 cd $(upcxx_src) &&                                  \
	 . utils/install-common.sh &&                        \
	 install_to="$(prefix)" install_common

install: force
	@$(MAKE) -C bld $@
	@$(MAKE) $@-hook

distclean-hook: force
	-[[ $(upcxx_src) = $(upcxx_bld) ]] || rm -R bld/Makefile
	-rm -R Makefile $(GASNET_UNPACKED)

distclean: force
	@$(MAKE) -C bld $@
	@$(MAKE) $@-hook

exe: force
	@if test -z "$(SRC)"; then \
	    echo "ERROR: target 'exe' requires a SRC'" >&2; \
	    echo "example: 'make exe SRC=test/hello_upcxx.cpp'" >&2; \
	    exit 1; \
	 fi
	@$(MAKE) -C bld $@ STARTDIR="$(shell pwd)"

# Default is pass-through
# TODO?: HOOK and LOCAL "magic" like UPCR's multiconf
%: force; @$(MAKE) -C bld $@

.PHONY: force echovar
.PHONY: install install-hook
.PHONY: distclean distclean-hook
