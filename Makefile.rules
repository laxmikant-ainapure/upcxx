#
# Top-level Makefile, minus the configuration variables
#

default: all ; @# empty rule

force:

# Echo an arbitrary make/environment variable
echovar: force; @echo $(VARNAME)=\"$($(VARNAME))\"

# To prevent application of pass-through rule upon 'include':
Makefile $(upcxx_src)/Makefile.rules: ; @# empty rule

# TODO: this is more complicated than necessary
install-hook: force
	@eval $$($(MAKE) --no-print-directory -C bld/gasnet.opt echovar VARNAME=CONDUITS) && \
	 if expr "x$(CROSS)" : xcray-aries- >/dev/null; then \
	   conduit_default='aries';                          \
	 else                                                \
	   conduit_default='smp';                            \
	 fi &&                                               \
	 cd $(upcxx_src) &&                                  \
	 . utils/install-common.sh &&                        \
	 conduits_pipes="$${CONDUITS// /|}"                  \
	 conduits_commas="$${CONDUITS// /, }"                \
	 install_to="$(prefix)" install_common

install: force
	@$(MAKE) -C bld $@
	@$(MAKE) $@-hook

distclean-hook: force
	-[[ $(upcxx_src) = $(upcxx_bld) ]] || rm -R bld/Makefile
	-rm -R Makefile $(GASNET_UNPACKED)

distclean: force
	@$(MAKE) -C bld $@
	@$(MAKE) $@-hook

# Default is pass-through
# TODO?: HOOK and LOCAL "magic" like UPCR's multiconf
%: force; @$(MAKE) -C bld $@

.PHONY: force echovar
.PHONY: install install-hook
.PHONY: distclean distclean-hook
