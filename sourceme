function upcxx_sourceme {
  if [ ! -n "$BASH" ]; then
   echo "Please run this script using bash."
   return
  fi
  
  # useful utility for printing ifdef/define guards to be pasted into
  # header files.
  function uuifdef {
    local x="_$(uuidgen|tr \\- _)"
    echo "#ifndef $x"
    echo "#define $x"
    echo "#endif"
  }
  
  # convert argument to absolute path
  function absify {
    python -c "import os; import sys; sys.stdout.write(os.path.abspath('$1'));"
  }
  
  # use the current directory as the root for the build tree
  NOBS_ROOT="$(python -c 'import os; import sys; sys.stdout.write(os.path.abspath(os.getcwd()));')"
  NOBS_PATH="${NOBS_ROOT}/nobs"
  
  if [ ! -e "$NOBS_PATH" ]; then
    echo "This script must be run from the toplevel of the upcxx source tree."
    return
  fi
  
  export NOBS_ROOT
  export NOBS_PATH

  # Find a suitable, working python install
  if [[ -z "${UPCXX_PYTHON}" ]]; then
    for py in python2.7 python2.8 python2 python ; do 
      fpy=`type -p $py`
      if test -x "$fpy" ; then
          ver=`"$fpy" --version 2>&1 | head -1 | cut -f2 -d' '`
          #echo "$fpy: $ver" 1>&2
	  if expr "$ver" : '2\.[0-9][0-9]*\.[0-9][0-9]*$' >/dev/null ; then
	    ver2=`echo $ver | cut -f2 -d.`
	    ver3=`echo $ver | cut -f3 -d.`
            if [ "$ver2" -gt 7 ] ||  \
	       ( [ "$ver2" -eq 7 ] && [ "$ver3" -ge 5 ] ) ; then
               export UPCXX_PYTHON="$fpy"
               #echo "USING: $UPCXX_PYTHON" 1>&2
               break
	    fi
	  fi
      fi
    done
  fi
  function nobs {
    "${UPCXX_PYTHON}" "${NOBS_PATH}/tool.py" "$@"
  }
  
  if [ -e "./sourceme.ext" ]; then
    . ./sourceme.ext
  fi
}

upcxx_sourceme
