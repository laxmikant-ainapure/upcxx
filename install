#!/bin/bash

if [ "$#" -ne 1 ]; then
  echo 'Usage: install <directory-path>' >&2
  exit 1
fi

. sourceme
INSTALL_DIR=$(absify "$1")

# Output information to assist in bug reports
if test -z "$UPCXX_INSTALL_QUIET" ; then (
  if test -d .git ; then
    echo UPCXX revision: `git describe --always 2> /dev/null`
  fi
  echo System: `uname -a 2>&1`
  /usr/bin/sw_vers 2> /dev/null
  /usr/bin/xcodebuild -version 2> /dev/null 
  /usr/bin/lsb_release -a 2> /dev/null
  echo " "
  echo Date: `date 2>&1`
  echo Current directory: `pwd 2>&1`
  echo Install directory: $INSTALL_DIR
  SETTINGS=
  for var in CC CXX GASNET GASNET_CONFIGURE_ARGS CROSS OPTLEV DBGSYM ; do
    if test "${!var:+set}" = set; then
      SETTINGS="$SETTINGS $var='${!var}'"
    fi
  done
  echo "Settings:$SETTINGS"
  echo " "
) fi

# Platform sanity checks
if test -z "$UPCXX_INSTALL_NOCHECK" ; then (
  if test -n "$CRAY_PRGENVINTEL" ; then
    echo 'ERROR: UPC++ on Cray XC currently requires PrgEnv-gnu. Please do: `module switch PrgEnv-intel PrgEnv-gnu`'
    exit 1
  elif test -n "$CRAY_PRGENVCRAY" ; then
    echo 'ERROR: UPC++ on Cray XC currently requires PrgEnv-gnu. Please do: `module switch PrgEnv-cray PrgEnv-gnu`'
    exit 1
  elif test -n "$CRAY_PRGENVGNU" ; then
    CC=${CC:-cc}
    CXX=${CXX:-CC}
  else
    CC=${CC:-gcc}
    CXX=${CXX:-g++}
  fi
  KERNEL=`uname -s 2> /dev/null`
  if test Linux = "$KERNEL" || test Darwin = "$KERNEL" ; then
    KERNEL_GOOD=1
  else
    KERNEL_GOOD=
  fi
  if test -z "$UPCXX_INSTALL_QUIET" ; then
    /usr/bin/which $CXX 2> /dev/null
    $CXX --version
    /usr/bin/which $CC 2> /dev/null
    $CC --version
    echo " "
  fi

  CXXVERS=`$CXX --version 2>&1`
  CCVERS=`$CC --version 2>&1`
  COMPILER_BAD=
  COMPILER_GOOD=
  if echo "$CXXVERS" | egrep 'Apple LLVM version [1-7]' 2>&1 > /dev/null ; then
    COMPILER_BAD=1
  elif echo "$CXXVERS" | egrep 'Apple LLVM version ([8-9]\.|[1-9][0-9])' 2>&1 > /dev/null ; then
    COMPILER_GOOD=1
  elif echo "$CXXVERS" | egrep 'g\+\+ .GCC. [1-4]\.' 2>&1 > /dev/null ; then
    COMPILER_BAD=1
  elif echo "$CXXVERS" | egrep 'g\+\+ .GCC. ([5-9]\.|[1-9][0-9])' 2>&1 > /dev/null ; then
    COMPILER_GOOD=1
  elif echo "$CXXVERS" | egrep 'clang version (2|3\.[1-6])' 2>&1 > /dev/null ; then
    COMPILER_BAD=1
  elif echo "$CXXVERS" | egrep 'clang version (3\.[7-9]|[4-9]\.|[1-9][0-9])' 2>&1 > /dev/null ; then
    COMPILER_GOOD=1
  fi

  RECOMMEND='We recommend Linux or OS X with one of the following C++ compilers: g++ 5.1.0 or newer, LLVM/clang 3.7.0 or newer, Xcode/clang 8.0.0 or newer'

  if test -n "$COMPILER_BAD" ; then
    echo 'ERROR: Your C++ compiler is known to lack the support needed to build UPCXX. Please set $CC and $CXX to point to a newer C/C++ compiler suite.'
    echo "ERROR: $RECOMMEND"
    exit 1
  elif test -z "$COMPILER_GOOD" || test -z "$KERNEL_GOOD" ; then
    echo 'WARNING: Your C++ compiler or platform has not been validated to run UPC++'
    echo "WARNING: $RECOMMEND"
  fi

  exit 0
) || exit 1 ; fi

nobs install src/upcxx.cpp $INSTALL_DIR
