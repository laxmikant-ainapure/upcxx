#!/bin/bash

function usage {
  cat<<EOF
Usage: ./install <install-to-path>
  See INSTALL.md for instructions.
EOF
}

function failure_and_die {
  echo "UPC++ Installation failed. Please report the entire log above to: upcxx@googlegroups.com" >&2
  exit 1
}

function echo_and_die {
  echo $* >&2
  exit 1
}

if [[ "$1" = "-h" || "$1" = "--help" ]]; then
  usage
  exit 0
elif [ "$#" -eq 1 ]; then
  single=0
  install_to="$1"
elif [ "$#" -eq 2 ]; then
  if [ "$1" != "--single" ]; then
    >&2 usage
    exit 1
  fi
  single=1
  install_to="$2"
else
  >&2 usage
  exit 1
fi

# Enable offline installers with an embedded GASNet-EX tarball
gex_offline=`/bin/ls "$PWD"/src/GASNet-2???.*.tar.gz 2> /dev/null | sort -t. -k1,1 -k2,2n -k3n | tail -1`
if [[ -z "$GASNET" && -r "$gex_offline" ]]; then
  export GASNET="$gex_offline"
fi

trap failure_and_die ERR

# Absify a directory name that may not yet exist
mkdir -p "$install_to"
install_to=$(cd "$install_to" && pwd -P)

. utils/system-checks.sh
sys_info
platform_sanity_checks
platform_settings
export CC
export CXX

# TODO: autoconf or cmake can/should enforce GNU make
GMAKE=${UPCXX_MAKE:-make -j8}

# TODO: autoconf or cmake can/should find a usable URL fetcher
if [ -n "$URL_CAT" ] ; then
  : # keep denf
elif [ -n "$(type -p curl)" ]; then
  URL_CAT='curl --retry 5 -LsS'
elif [ -n "$(type -p wget)" ]; then
  URL_CAT='wget --tries=5 -nv -O -'
fi

# Fetch and/or unpack GASNet-EX
if [ -r "$GASNET/gasnet_config.h.in" ]; then
  # Convert relative path of souce directory to absolute if necessary
  if ! expr "$GASNET" : / >/dev/null; then
    export GASNET=$(cd "$GASNET" && pwd -P)
  fi
elif expr "$GASNET" : '.*\.tar\.gz' >/dev/null; then
  # Unpack tarball into bld/ unless already present
  gex_dir="$PWD/bld/`basename $GASNET .tar.gz`"
  if [ ! -r "$gex_dir/gasnet_config.h.in" ]; then
    mkdir -p bld
    if expr "$GASNET" : http >/dev/null; then
      if [ -z "$URL_CAT" ]; then
        echo_and_die "Do not know how to fetch a URL (did not find wget or curl)"
      fi
      CAT="$URL_CAT"
    else
      CAT='cat'
    fi
    eval "$CAT '$GASNET'" | gzip -cd | ( cd bld && tar xf - )
    [ -r "$gex_dir/gasnet_config.h.in" ] || echo_and_die "Failed to fetch and/or unpack $GASNET"
  fi
  export GASNET="$gex_dir"
else
  echo_and_die "GASNET must point to local tarball file, tarball url, or gasnet source tree."
fi

MAKE_CMD="$GMAKE -C bld upcxx_src='$PWD' prefix='${install_to}' GASNET='$GASNET'"

if [ "$single" -eq 1 ]; then
  eval $MAKE_CMD install-single
  if [ $? -ne 0 ]; then failure_and_die; fi
else
  eval $MAKE_CMD install
  if [ $? -ne 0 ]; then failure_and_die; fi
  
  eval $($GMAKE --no-print-directory -C bld/gasnet.opt echovar VARNAME=CONDUITS)
  conduits_pipes="${CONDUITS// /|}"
  conduits_commas="${CONDUITS// /, }"
  if expr "x$CROSS" : xcray-aries- >/dev/null; then
    conduit_default='aries'
  else
    conduit_default='smp'
  fi
  
  . utils/install-common.sh
  install_common
fi

echo "UPC++ successfully installed"
